"use strict";(self.webpackChunkcourier=self.webpackChunkcourier||[]).push([[259],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var f=r.createContext({}),l=function(e){var t=r.useContext(f),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(f.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,f=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=l(n),k=a,b=s["".concat(f,".").concat(k)]||s[k]||u[k]||o;return n?r.createElement(b,i(i({ref:t},p),{},{components:n})):r.createElement(b,i({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=s;var c={};for(var f in t)hasOwnProperty.call(t,f)&&(c[f]=t[f]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},494:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return f},default:function(){return k},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={},f=void 0,l={unversionedId:"sdk/xds/backoff",id:"sdk/xds/backoff",title:"backoff",description:"Package backoff provides exponential backoff capabilities",source:"@site/docs/sdk/xds/backoff.md",sourceDirName:"sdk/xds",slug:"/sdk/xds/backoff",permalink:"/courier-go/docs/sdk/xds/backoff",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sdk/xds/backoff.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"xDS",permalink:"/courier-go/docs/sdk/xds/"},next:{title:"bootstrap",permalink:"/courier-go/docs/sdk/xds/bootstrap"}},p={},u=[{value:"Index",id:"index",level:2},{value:"Variables",id:"variables",level:2},{value:"type Exponential",id:"type-exponential",level:2},{value:"func (Exponential) Backoff",id:"func-exponential-backoff",level:3},{value:"type Strategy",id:"type-strategy",level:2}],s={toc:u};function k(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"backoff"},"backoff"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/gojek/courier-go/xds/backoff"\n')),(0,o.kt)("p",null,"Package backoff provides exponential backoff capabilities"),(0,o.kt)("h2",{id:"index"},"Index"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#variables"},"Variables")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#type-exponential"},"type Exponential"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#func-exponential-backoff"},"func (bc Exponential) Backoff(retries int) time.Duration")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#type-strategy"},"type Strategy"))),(0,o.kt)("h2",{id:"variables"},"Variables"),(0,o.kt)("p",null,"DefaultExponential is an exponential backoff implementation using the default values for all the configurable knobs defined in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/grpc/grpc/blob/master/doc/connection-backoff.md"},"https://github.com/grpc/grpc/blob/master/doc/connection-backoff.md"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"var DefaultExponential = Exponential{Config: grpcbackoff.DefaultConfig}\n")),(0,o.kt)("h2",{id:"type-exponential"},"type ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/gojek/courier-go/blob/main/xds/backoff/backoff.go#L27-L30"},"Exponential")),(0,o.kt)("p",null,"Exponential implements exponential backoff algorithm as defined in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/grpc/grpc/blob/master/doc/connection-backoff.md"},"https://github.com/grpc/grpc/blob/master/doc/connection-backoff.md"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type Exponential struct {\n    // Config contains all options to configure the backoff algorithm.\n    Config grpcbackoff.Config\n}\n")),(0,o.kt)("h3",{id:"func-exponential-backoff"},"func ","(","Exponential",")"," ",(0,o.kt)("a",{parentName:"h3",href:"https://github.com/gojek/courier-go/blob/main/xds/backoff/backoff.go#L34"},"Backoff")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (bc Exponential) Backoff(retries int) time.Duration\n")),(0,o.kt)("p",null,"Backoff returns the amount of time to wait before the next retry given the number of retries."),(0,o.kt)("h2",{id:"type-strategy"},"type ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/gojek/courier-go/blob/main/xds/backoff/backoff.go#L12-L16"},"Strategy")),(0,o.kt)("p",null,"Strategy defines the methodology for backing off after a grpc connection failure."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type Strategy interface {\n    // Backoff returns the amount of time to wait before the next retry given\n    // the number of consecutive failures.\n    Backoff(retries int) time.Duration\n}\n")),(0,o.kt)("p",null,"Generated by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/princjef/gomarkdoc"},"gomarkdoc")))}k.isMDXComponent=!0}}]);