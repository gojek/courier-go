"use strict";(self.webpackChunkcourier=self.webpackChunkcourier||[]).push([[192],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>g});var a=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,i=function(e,r){if(null==e)return{};var t,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),u=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=u(e.components);return a.createElement(c.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,i=e.mdxType,n=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=i,g=p["".concat(c,".").concat(m)]||p[m]||d[m]||n;return t?a.createElement(g,o(o({ref:r},s),{},{components:t})):a.createElement(g,o({ref:r},s))}));function g(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var n=t.length,o=new Array(n);o[0]=m;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<n;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6738:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>u});var a=t(7462),i=(t(7294),t(3905));const n={},o=void 0,l={unversionedId:"sdk/otelcourier",id:"sdk/otelcourier",title:"otelcourier",description:"Package otelcourier instruments the github.com/gojek/courier\\-go package.",source:"@site/docs/sdk/otelcourier.md",sourceDirName:"sdk",slug:"/sdk/otelcourier",permalink:"/courier-go/docs/sdk/otelcourier",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sdk/otelcourier.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"consul",permalink:"/courier-go/docs/sdk/consul"},next:{title:"slog",permalink:"/courier-go/docs/sdk/slog"}},c={},u=[{value:"Index",id:"index",level:2},{value:"Constants",id:"constants",level:2},{value:"Variables",id:"variables",level:2}],s={toc:u},p="wrapper";function d(e){let{components:r,...t}=e;return(0,i.kt)(p,(0,a.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"otelcourier"},"otelcourier"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/gojek/courier-go/otelcourier"\n')),(0,i.kt)("p",null,"Package otelcourier instruments the github.com/gojek/courier","-","go package."),(0,i.kt)("h2",{id:"index"},"Index"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#constants"},"Constants")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#variables"},"Variables")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#DefaultTopicAttributeTransformer"},"func DefaultTopicAttributeTransformer","(","_"," context.Context, topic string",")"," string")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#BucketBoundaries"},"type BucketBoundaries")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#CourierConfig"},"type CourierConfig")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#OTel"},"type OTel"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#New"},"func New","(","service string, opts ...Option",")"," ","*","OTel")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#OTel.ApplyMiddlewares"},"func ","(","t ","*","OTel",")"," ApplyMiddlewares","(","c UseMiddleware",")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#OTel.PublisherMiddleware"},"func ","(","t ","*","OTel",")"," PublisherMiddleware","(","next courier.Publisher",")"," courier.Publisher")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#OTel.Stop"},"func ","(","t ","*","OTel",")"," Stop","(",")"," error")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#OTel.StopMiddleware"},"func ","(","t ","*","OTel",")"," StopMiddleware","(","next courier.Stopper",")"," courier.Stopper")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#OTel.SubscriberMiddleware"},"func ","(","t ","*","OTel",")"," SubscriberMiddleware","(","next courier.Subscriber",")"," courier.Subscriber")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#OTel.UnsubscriberMiddleware"},"func ","(","t ","*","OTel",")"," UnsubscriberMiddleware","(","next courier.Unsubscriber",")"," courier.Unsubscriber")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#Option"},"type Option"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#WithAttributes"},"func WithAttributes","(","attrs ...attribute.KeyValue",")"," Option")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#WithInfoHandlerFrom"},"func WithInfoHandlerFrom","(","c interface","{"," InfoHandler","(",")"," http.Handler ","}",")"," Option")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#WithMeterProvider"},"func WithMeterProvider","(","provider metric.MeterProvider",")"," Option")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#WithTextMapCarrierExtractFunc"},"func WithTextMapCarrierExtractFunc","(","fn func","(","context.Context",")"," propagation.TextMapCarrier",")"," Option")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#WithTextMapPropagator"},"func WithTextMapPropagator","(","propagator propagation.TextMapPropagator",")"," Option")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#WithTracerProvider"},"func WithTracerProvider","(","provider oteltrace.TracerProvider",")"," Option")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#TopicAttributeTransformer"},"type TopicAttributeTransformer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#UseMiddleware"},"type UseMiddleware"))),(0,i.kt)("h2",{id:"constants"},"Constants"),(0,i.kt)("a",{name:"MQTTTopic"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'const (\n    // MQTTTopic is the attribute key for tracing message topic\n    MQTTTopic = attribute.Key("mqtt.topic")\n    // MQTTQoS is the attribute key for tracing message qos\n    MQTTQoS = attribute.Key("mqtt.qos")\n    // MQTTTopicWithQoS is the attribute key for tracing message topic and qos together\n    MQTTTopicWithQoS = attribute.Key("mqtt.topicwithqos")\n    // MQTTRetained is the attribute key for tracing message retained flag\n    MQTTRetained = attribute.Key("mqtt.retained")\n    // MQTTClientID is the attribute key for tracing mqtt client id\n    MQTTClientID = attribute.Key("mqtt.clientid")\n)\n')),(0,i.kt)("h2",{id:"variables"},"Variables"),(0,i.kt)("a",{name:"DisableCallbackTracing"}),"DisableCallbackTracing disables implicit tracing on subscription callbacks.",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"var DisableCallbackTracing = &disableTracePathOpt{traceCallback}\n")),(0,i.kt)("a",{name:"DisablePublisherTracing"}),"DisablePublisherTracing disables courier.Publisher tracing.",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"var DisablePublisherTracing = &disableTracePathOpt{tracePublisher}\n")),(0,i.kt)("a",{name:"DisableSubscriberTracing"}),"DisableSubscriberTracing disables courier.Subscriber tracing.",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"var DisableSubscriberTracing = &disableTracePathOpt{traceSubscriber}\n")),(0,i.kt)("a",{name:"DisableUnsubscriberTracing"}),"DisableUnsubscriberTracing disables courier.Unsubscriber tracing.",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"var DisableUnsubscriberTracing = &disableTracePathOpt{traceUnsubscriber}\n")),(0,i.kt)("a",{name:"DefaultTopicAttributeTransformer"}),"## func [DefaultTopicAttributeTransformer](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L69)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func DefaultTopicAttributeTransformer(_ context.Context, topic string) string\n")),(0,i.kt)("p",null,"DefaultTopicAttributeTransformer is the default transformer for topic attribute."),(0,i.kt)("a",{name:"BucketBoundaries"}),"## type [BucketBoundaries](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L72-L74)",(0,i.kt)("p",null,"BucketBoundaries helps override default histogram bucket boundaries for metrics."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type BucketBoundaries struct {\n    Publisher, Subscriber, Unsubscriber, Callback []float64\n}\n")),(0,i.kt)("a",{name:"CourierConfig"}),"## type [CourierConfig](https://github.com/gojek/courier-go/blob/main/otelcourier/metric.go#L153-L158)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type CourierConfig interface {\n    ConnectTimeout() time.Duration\n    WriteTimeout() time.Duration\n    KeepAlive() time.Duration\n    AckTimeout() time.Duration\n}\n")),(0,i.kt)("a",{name:"OTel"}),"## type [OTel](https://github.com/gojek/courier-go/blob/main/otelcourier/otel.go#L31-L45)",(0,i.kt)("p",null,"OTel implements tracing & metric abilities using OpenTelemetry SDK."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type OTel struct {\n    // contains filtered or unexported fields\n}\n")),(0,i.kt)("a",{name:"New"}),"### func [New](https://github.com/gojek/courier-go/blob/main/otelcourier/otel.go#L48)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func New(service string, opts ...Option) *OTel\n")),(0,i.kt)("p",null,"New creates a new OTel with Option","(","s",")","."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Example"),(0,i.kt)("p",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'tp := trace.NewTracerProvider()\ndefer tp.Shutdown(context.Background())\n\nexporter, err := prometheus.New(\n/* Add a non-default prometheus registry here with `prometheus.WithRegisterer` option, if needed. */\n)\nif err != nil {\n    panic(err)\n}\nmp := metric.NewMeterProvider(metric.WithReader(exporter))\n\notel.SetTracerProvider(tp)\notel.SetMeterProvider(mp)\notel.SetTextMapPropagator(&propagation.TraceContext{})\n\nmetricLabelMapper := otelcourier.TopicAttributeTransformer(func(ctx context.Context, topic string) string {\n    if strings.HasPrefix(topic, "test") {\n        return "test"\n    }\n\n    return "other"\n})\n\nc, _ := courier.NewClient()\notelcourier.New(\n    "service-name",\n    // Use this to also track active connections.\n    otelcourier.WithInfoHandlerFrom(c),\n    metricLabelMapper,\n).ApplyMiddlewares(c)\n\nif err := c.Start(); err != nil {\n    panic(err)\n}\n\nctx, _ := signal.NotifyContext(context.Background(), os.Interrupt, os.Kill)\n\nif err := c.Publish(\n    context.Background(), "test-topic", "message", courier.QOSOne); err != nil {\n    panic(err)\n}\n\nif err := c.Publish(\n    context.Background(), "other-topic", "message", courier.QOSOne); err != nil {\n    panic(err)\n}\n\n// Here, you can expose the metrics at /metrics endpoint for prometheus.DefaultRegisterer.\n\n<-ctx.Done()\n\nc.Stop()\n')))),(0,i.kt)("a",{name:"OTel.ApplyMiddlewares"}),"### func \\(\\*OTel\\) [ApplyMiddlewares](https://github.com/gojek/courier-go/blob/main/otelcourier/otel.go#L86)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (t *OTel) ApplyMiddlewares(c UseMiddleware)\n")),(0,i.kt)("p",null,"ApplyMiddlewares will instrument all the operations of a UseMiddleware instance according to Option","(","s",")"," used."),(0,i.kt)("a",{name:"OTel.PublisherMiddleware"}),"### func \\(\\*OTel\\) [PublisherMiddleware](https://github.com/gojek/courier-go/blob/main/otelcourier/publish.go#L23)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (t *OTel) PublisherMiddleware(next courier.Publisher) courier.Publisher\n")),(0,i.kt)("p",null,"PublisherMiddleware is a courier.PublisherMiddlewareFunc for tracing publish calls."),(0,i.kt)("a",{name:"OTel.Stop"}),"### func \\(\\*OTel\\) [Stop](https://github.com/gojek/courier-go/blob/main/otelcourier/stop.go#L6)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (t *OTel) Stop() error\n")),(0,i.kt)("p",null,"Stop implements the courier.Stopper interface to unregister any handlers or clean up resources."),(0,i.kt)("a",{name:"OTel.StopMiddleware"}),"### func \\(\\*OTel\\) [StopMiddleware](https://github.com/gojek/courier-go/blob/main/otelcourier/stop.go#L19)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (t *OTel) StopMiddleware(next courier.Stopper) courier.Stopper\n")),(0,i.kt)("p",null,"StopMiddleware returns a Stopper middleware that ensures OTel async metric is unregistered when the client stops."),(0,i.kt)("a",{name:"OTel.SubscriberMiddleware"}),"### func \\(\\*OTel\\) [SubscriberMiddleware](https://github.com/gojek/courier-go/blob/main/otelcourier/subscribe.go#L43)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (t *OTel) SubscriberMiddleware(next courier.Subscriber) courier.Subscriber\n")),(0,i.kt)("p",null,"SubscriberMiddleware is a courier.SubscriberMiddlewareFunc for tracing subscribe calls."),(0,i.kt)("a",{name:"OTel.UnsubscriberMiddleware"}),"### func \\(\\*OTel\\) [UnsubscriberMiddleware](https://github.com/gojek/courier-go/blob/main/otelcourier/unsubscribe.go#L22)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (t *OTel) UnsubscriberMiddleware(next courier.Unsubscriber) courier.Unsubscriber\n")),(0,i.kt)("p",null,"UnsubscriberMiddleware is a courier.UnsubscriberMiddlewareFunc for tracing unsubscribe calls."),(0,i.kt)("a",{name:"Option"}),"## type [Option](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L15)",(0,i.kt)("p",null,"Option helps configure trace options."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type Option interface {\n    // contains filtered or unexported methods\n}\n")),(0,i.kt)("a",{name:"WithAttributes"}),"### func [WithAttributes](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L52)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func WithAttributes(attrs ...attribute.KeyValue) Option\n")),(0,i.kt)("p",null,"WithAttributes adds custom attributes to all spans and metrics created."),(0,i.kt)("a",{name:"WithInfoHandlerFrom"}),"### func [WithInfoHandlerFrom](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L47)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func WithInfoHandlerFrom(c interface{ InfoHandler() http.Handler }) Option\n")),(0,i.kt)("p",null,"WithInfoHandlerFrom is used to specify the handler which should be used to extract client information from the courier.Client instance."),(0,i.kt)("a",{name:"WithMeterProvider"}),"### func [WithMeterProvider](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L29)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func WithMeterProvider(provider metric.MeterProvider) Option\n")),(0,i.kt)("p",null,"WithMeterProvider specifies a meter provider to use for creating a meter. If none is specified, the global provider is used."),(0,i.kt)("a",{name:"WithTextMapCarrierExtractFunc"}),"### func [WithTextMapCarrierExtractFunc](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L41)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func WithTextMapCarrierExtractFunc(fn func(context.Context) propagation.TextMapCarrier) Option\n")),(0,i.kt)("p",null,"WithTextMapCarrierExtractFunc is used to specify the function which should be used to extract propagation.TextMapCarrier from the ongoing context.Context."),(0,i.kt)("a",{name:"WithTextMapPropagator"}),"### func [WithTextMapPropagator](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L35)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func WithTextMapPropagator(propagator propagation.TextMapPropagator) Option\n")),(0,i.kt)("p",null,"WithTextMapPropagator specifies the propagator to use for extracting/injecting key","-","value texts. If none is specified, the global provider is used."),(0,i.kt)("a",{name:"WithTracerProvider"}),"### func [WithTracerProvider](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L23)",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func WithTracerProvider(provider oteltrace.TracerProvider) Option\n")),(0,i.kt)("p",null,"WithTracerProvider specifies a tracer provider to use for creating a tracer. If none is specified, the global provider is used."),(0,i.kt)("a",{name:"TopicAttributeTransformer"}),"## type [TopicAttributeTransformer](https://github.com/gojek/courier-go/blob/main/otelcourier/options.go#L19)",(0,i.kt)("p",null,"TopicAttributeTransformer helps transform topic before making an attribute for it. It is used in metric recording only. Traces use the original topic."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type TopicAttributeTransformer func(context.Context, string) string\n")),(0,i.kt)("a",{name:"UseMiddleware"}),"## type [UseMiddleware](https://github.com/gojek/courier-go/blob/main/otelcourier/otel.go#L23-L28)",(0,i.kt)("p",null,"UseMiddleware is an interface that defines the methods to apply middlewares to a courier.Client or similar instance."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type UseMiddleware interface {\n    UsePublisherMiddleware(mwf ...courier.PublisherMiddlewareFunc)\n    UseSubscriberMiddleware(mwf ...courier.SubscriberMiddlewareFunc)\n    UseUnsubscriberMiddleware(mwf ...courier.UnsubscriberMiddlewareFunc)\n    UseStopMiddleware(mwf courier.StopMiddlewareFunc)\n}\n")),(0,i.kt)("p",null,"Generated by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/princjef/gomarkdoc"},"gomarkdoc")))}d.isMDXComponent=!0}}]);