"use strict";(self.webpackChunkcourier=self.webpackChunkcourier||[]).push([[582],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=u(r),m=o,d=p["".concat(c,".").concat(m)]||p[m]||b[m]||s;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[p]="string"==typeof e?e:o,i[1]=a;for(var u=2;u<s;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7387:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>b,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const s={title:"Subscribe Messages",description:"Tutorial on subscribing to messages via client"},i=void 0,a={unversionedId:"Tutorials/subscribe",id:"Tutorials/subscribe",title:"Subscribe Messages",description:"Tutorial on subscribing to messages via client",source:"@site/docs/Tutorials/subscribe.md",sourceDirName:"Tutorials",slug:"/Tutorials/subscribe",permalink:"/courier-go/docs/Tutorials/subscribe",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Tutorials/subscribe.md",tags:[],version:"current",frontMatter:{title:"Subscribe Messages",description:"Tutorial on subscribing to messages via client"},sidebar:"tutorialSidebar",previous:{title:"Publish Message",permalink:"/courier-go/docs/Tutorials/publish"},next:{title:"SDK",permalink:"/courier-go/docs/sdk/"}},c={},u=[],l={toc:u},p="wrapper";function b(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can add a subscription to a topic and respond to message as well when you receive a message."),(0,o.kt)("p",null,"For example, you can relay the ",(0,o.kt)("inlineCode",{parentName:"p"},"received_at")," time back to the sender by publishing a message. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="subscriber.go" {11-18,22}',title:'"subscriber.go"',"{11-18,22}":!0},'type chatMessage struct {\n    From string      `json:"from"`\n    To   string      `json:"to"`\n    Data interface{} `json:"data"`\n}\n\ntype status struct {\n    ReceivedAt time.Time `json:"received_at"`\n}\n\ncb := func(ctx context.Context, ps courier.PubSub, m *courier.Message) {\n    msg := new(chatMessage)\n    if err := m.DecodePayload(msg); err != nil {\n        // Log Error or Panic\n    }\n\n    _ = ps.Publish(ctx, fmt.Sprintf("chat/%s/send", msg.From), &status{ReceivedAt: time.Now()})\n}\n\nvar client courier.Subscriber\n\n_ = client.Subscribe(context.Background(), "chat/test-username-2/send", cb)\n')))}b.isMDXComponent=!0}}]);