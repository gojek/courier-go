"use strict";(self.webpackChunkcourier=self.webpackChunkcourier||[]).push([[713],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,u=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),p=l(n),g=o,m=p["".concat(u,".").concat(g)]||p[g]||d[g]||c;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,i=new Array(c);i[0]=g;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[p]="string"==typeof e?e:o,i[1]=a;for(var l=2;l<c;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4693:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const c={title:"Background Broker Connect",description:"Tutorial on connecting to an MQTT broker"},i=void 0,a={unversionedId:"Tutorials/connect_background",id:"Tutorials/connect_background",title:"Background Broker Connect",description:"Tutorial on connecting to an MQTT broker",source:"@site/docs/Tutorials/connect_background.md",sourceDirName:"Tutorials",slug:"/Tutorials/connect_background",permalink:"/courier-go/docs/Tutorials/connect_background",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Tutorials/connect_background.md",tags:[],version:"current",frontMatter:{title:"Background Broker Connect",description:"Tutorial on connecting to an MQTT broker"},sidebar:"tutorialSidebar",previous:{title:"Connect to Broker",permalink:"/courier-go/docs/Tutorials/connect"},next:{title:"Custom Message Codec",permalink:"/courier-go/docs/Tutorials/custom_codec"}},u={},l=[],s={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Create a new courier client and provide broker address to it."),(0,o.kt)("p",null,"You can start the client in background with ",(0,o.kt)("inlineCode",{parentName:"p"},"courier.ExponentialStartStrategy")," which will keep trying to connect to the broker until the context is cancelled."),(0,o.kt)("p",null,"You can wait for the connection with ",(0,o.kt)("inlineCode",{parentName:"p"},"courier.WaitForConnection")," and verify the connection by calling ",(0,o.kt)("inlineCode",{parentName:"p"},".IsConnected()")," and it should return true."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="background_connect.go" {2,13,15}',title:'"background_connect.go"',"{2,13,15}":!0},'c, err := courier.NewClient(\n    courier.WithAddress("broker.emqx.io", 1883),\n    // courier.WithUsername("username"),\n    // courier.WithPassword("password"),\n)\n\nif err != nil {\n    panic(err)\n}\n\nctx, _ := signal.NotifyContext(context.Background(), os.Interrupt, os.Kill)\n\ncourier.ExponentialStartStrategy(ctx, c)\n\ncourier.WaitForConnection(c, 5*time.Second, 100*time.Millisecond)\n\nfmt.Println(c.IsConnected())\n')))}d.isMDXComponent=!0}}]);